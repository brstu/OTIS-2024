<p align="center"> Министерство образования Республики Беларусь</p>
<p align="center">Учреждение образования</p>
<p align="center">“Брестский Государственный технический университет”</p>
<p align="center">Кафедра ИИТ</p>
<br><br><br><br><br><br><br>
<p align="center">Лабораторная работа №2</p>
<p align="center">По дисциплине “Общая теория интеллектуальных систем”</p>
<p align="center">Тема: “ПИД-регуляторы”</p>
<br><br><br><br><br>
<p align="right">Выполнил:</p>
<p align="right">Студент 2 курса</p>
<p align="right">Группы ИИ-26</p>
<p align="right">Турич Д.А.</p>
<p align="right">Проверила:</p>
<p align="right">Ситковец Я. С.</p>
<br><br><br><br><br>
<p align="center">Брест 2024</p>

---

# Общее задание #
1. Написать отчет по выполненной лабораторной работе №1 в .md формате (readme.md) и с помощью запроса на внесение изменений (**pull request**) разместить его в следующем каталоге: **trunk\ii0xxyy\task_02\doc** (где **xx** - номер группы, **yy** - номер студента, например **ii02302**).
2. Исходный код написанной программы разместить в каталоге: **trunk\ii0xxyy\task_02\src**.

# Задание #
Задание. На C++ реализовать программу, моделирующую рассмотренный выше ПИД-регулятор. В качестве объекта управления использовать математическую модель, полученную в предыдущей работе. В отчете также привести графики для разных заданий температуры объекта, пояснить полученные результаты.
---
# Код программы: #
```C++
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

// Коэффициенты системы
double a, b, c, d;
// Параметры системы
double k, t_s, t_d, t_c, steps;
// Параметры регулятора
double q_0, q_1, q_2;

void nonlinear_system() {
	
	const short int initial_output = 2;
	vector<double> output = { initial_output, initial_output };  
	double control_signal = 1.0;  
	vector<double> error = { steps - initial_output, steps - initial_output };  
	vector<double> previous_control_signal = { control_signal, control_signal };  

	
	while (abs(steps - output.back()) > 0.01)
	{
		error.push_back(steps - output.back());  
		control_signal = previous_control_signal.back() + q_0 * error.back() + q_1 * error[error.size() - 2] + q_2 * error[error.size() - 3];
		
		output.push_back(a * output.back() - b * output[output.size() - 2] + c * control_signal + d * sin(previous_control_signal.back()));
		previous_control_signal.push_back(control_signal);  
	}

	// Вывод результатов
	cout << "Step\tOutput\tError\tControl Signal\n";
	for (int i = 0; i < output.size(); i++)
		cout << i + 1 << ";" << output[i] << ";" << error[i] << ";" << previous_control_signal[i] << endl;
}

int main() {
	setlocale(LC_ALL, "Russian");
	cout << "Введите коэффициенты системы:\n";
	cout << "a: "; cin >> a;
	cout << "b: "; cin >> b;
	cout << "c: "; cin >> c;
	cout << "d: "; cin >> d;

	
	cout << "Введите параметры системы:\n";
	cout << "k: "; cin >> k;
	cout << "t_s: "; cin >> t_s;
	cout << "t_d: "; cin >> t_d;
	cout << "t_c: "; cin >> t_c;
	cout << "steps: "; cin >> t_c;


	q_0 = k * (1 + (t_d / t_s));
	q_1 = -k * (1 + 2 * (t_d / t_s) - (t_s / t_c));
	q_2 = k * (t_d / t_s);

	
	nonlinear_system();

	return 0;
}
```     
Вывод программы: 
```
Введите коэффициенты системы:
a: 0.1
b: 0.3
c: 0.03
d: 1
Введите параметры системы:
k: 1
t_s: 1
t_d: 1
t_c: 1
steps: 7
Step    Output  Error   Control Signal
1;2;-2;1
2;2;-2;1
3;0.4629;-2;0.714286
4;0.206451;-0.4629;3.50277
5;-0.39923;-0.206451;2.41244
6;0.664515;0.39923;3.33786
7;0.0110623;-0.664515;0.661723
8;0.504352;-0.0110623;2.93744
9;0.288726;-0.504352;1.29583
10;0.904451;-0.288726;2.14832
11;0.861444;-0.904451;0.659999
12;0.464901;-0.861444;1.23253
13;0.787175;-0.464901;1.85955
14;0.920409;-0.787175;0.752041
15;0.559881;-0.920409;0.695393
16;0.463098;-0.559881;1.4182
17;0.901862;-0.463098;1.17125
18;0.876418;-0.901862;0.130783
19;-0.0377585;-0.876418;0.491598
20;0.270413;0.0377585;2.1693
21;0.883872;-0.270413;0.644178
22;0.598409;-0.883872;-0.313197
23;-0.491075;-0.598409;0.74492
24;0.525871;0.491075;2.55294
25;0.740145;-0.525871;-0.500285
26;-0.563032;-0.740145;0.0129885
27;-0.183522;0.563032;2.72788
28;0.574951;0.183522;0.746118
29;0.780392;-0.574951;-0.3651
30;-0.454478;-0.780392;-0.0996452
31;-0.305124;0.454478;2.46405
32;0.762573;0.305124;0.995399
33;0.978359;-0.762573;-0.947052
34;-0.955229;-0.978359;-0.419866
35;-0.690969;0.955229;3.52333
36;-0.119131;0.690969;1.19768
37;1.13908;0.119131;0.416978
38;0.509329;-1.13908;-1.5106
39;-1.26365;-0.509329;0.844402
40;0.579046;1.26365;3.68784
41;-0.130187;-0.579046;-1.59
42;-1.13889;0.130187;1.58844
43;1.01247;1.13889;2.91522
44;0.600357;-1.01247;-2.23352
45;-1.0141;-0.600357;0.597428
46;0.380855;1.0141;3.32847
47;0.128591;-0.380855;-0.931031
48;-0.876212;-0.128591;0.914046
49;0.745373;0.876212;2.65302
50;0.762675;-0.745373;-1.46978
51;-1.14193;-0.762675;0.0107181
52;-0.220429;1.14193;3.72827
53;-0.228745;0.220429;0.143806
54;0.219968;0.228745;1.11342
55;0.995047;-0.219968;0.24036
56;0.244791;-0.995047;-0.892509
57;-1.01546;-0.244791;1.24093
58;0.86039;1.01546;2.9762
59;0.498596;-0.86039;-1.89067
60;-1.13996;-0.498596;0.585848
61;0.39223;1.13996;3.42993
62;0.0635469;-0.39223;-1.11014
63;-0.976375;-0.0635469;1.02338
64;0.820132;0.976375;2.76546
65;0.690413;-0.820132;-1.728
66;-1.15834;-0.690413;0.210788
67;-0.00332944;1.15834;3.67995

![График](unliner.png)